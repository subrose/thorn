version: "3.8"
services:
  # keydb:
  #   image: eqalpha/keydb:x86_64_v6.3.3
  #   container_name: keydb
  #   command: keydb-server --server-threads 1 --protected-mode no --appendonly yes
  #   ports:
  #     - 6379:6379
  #   restart: unless-stopped
  #   volumes:
  #     - ./keydb/redis.conf:/etc/keydb/redis.conf
  postgres:
    image: postgres:16.1-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  api:
    profiles: ["simulations"]
    environment:
      - VAULT_DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      - VAULT_API_HOST=0.0.0.0
      - VAULT_API_PORT=3001
      - VAULT_ADMIN_USERNAME=admin
      - VAULT_ADMIN_PASSWORD=admin
      - VAULT_DEV_MODE=true
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    entrypoint: ["/go/bin/api", "--configFile", "./conf/test.conf.toml"]
    ports:
      - 3001:3001
    depends_on:
      - postgres
    volumes:
      - "./:/app"
  simulations:
    profiles: ["simulations"]
    build:
      context: .
      dockerfile: Dockerfile
      target: simulator
    environment:
      - VAULT_URL=http://api:3001
    working_dir: /code
    depends_on:
      - api
      - postgres
    command: sh -c "cd simulator && ./simulate.sh"
    volumes:
      - "./:/code"
  tests:
    profiles: ["tests"]
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    environment:
      - VAULT_DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
    working_dir: /code
    depends_on:
      - postgres
    command: sh -c "go test ./vault && go test ./api"
    volumes:
      - "./:/code"
